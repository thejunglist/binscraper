 name: Create GitHub Actions compatible script
  run: |
    cat > github_bins.js << 'EOL'
    import puppeteer from 'puppeteer-core';
    import fs from 'fs';
    
    (async () => {
      // Launch browser with explicit no-sandbox configuration
      const browser = await puppeteer.launch({
        headless: true,
        executablePath: '/usr/bin/google-chrome',
        args: [
          '--no-sandbox',
          '--disable-setuid-sandbox',
          '--disable-dev-shm-usage',
          '--disable-gpu',
          '--window-size=1920,1080',
        ]
      });
      
      const page = await browser.newPage();
      const result = [];
      
      // Navigate to council bin collection website
      await page.goto('https://www.west-dunbarton.gov.uk/recycling-and-waste/bin-collection-day/');
      
      // Set screen size
      await page.setViewport({width: 1080, height: 1024});
      
      // Click cookie banner
      await page.locator('button.btn:nth-child(2)').click();
      
      // Type into search box
      await page.type('#inputPostcode', 'G83 9DR');
      
      // Click go
      await page.locator('button.btn-primary:nth-child(1)').click();
      
      // Select dropdown
      await page.locator('#uprn').click();
      for (let i = 0; i < 9; i++) {
        await page.keyboard.down("ArrowDown");
      }
      
      // Click Go
      await page.locator('.btn-success').click();
      
      // Wait for the results to load
      await page.waitForSelector('.round-info');
      
      // Extract bin collection data
      const binData = await page.evaluate(() => {
        const rounds = document.querySelectorAll('.round-info');
        
        return Array.from(rounds).map(round => {
          const binType = round.querySelector('div:nth-child(2)').textContent.trim();
          const day = round.querySelector('div:nth-child(3) > span:nth-child(1)').textContent.trim();
          const date = round.querySelector('div:nth-child(3) > span:nth-child(2)').textContent.trim();
          
          return {
            binType,
            day,
            date
          };
        });
      });
      
      console.log("Extracted bin data:", binData);
      
      // Write data to JSON file
      fs.writeFileSync('binCollections.json', JSON.stringify(binData, null, 2));
      
      // Close the browser
      await browser.close();
    })().catch(error => {
      console.error("Error running script:", error);
      process.exit(1);
    });
    EOL
    
